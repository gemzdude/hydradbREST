package io.pivotal.gemfire.toolsmiths.hdbr.data.gen;

import io.pivotal.gemfire.toolsmiths.hdbr.data.JdbcRepository;
import io.pivotal.gemfire.toolsmiths.hdbr.data.RowUnmapper;
import io.pivotal.gemfire.toolsmiths.hdbr.data.gen.db.USERDB;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcOperations;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Repository;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
@Repository
public class USERRepository extends JdbcRepository<USER, String>
{

	final static Logger logger = LoggerFactory.getLogger (USERRepository.class);

	@Autowired
	private JdbcOperations jdbcOperations;

	protected JdbcOperations getJdbcOperations()
	{
		return this.jdbcOperations;
	}

	public USERRepository()
	{
		super (USERDB.ROW_MAPPER, USERDB.ROW_UNMAPPER, USERDB.getTableName ());
	}

	public USERRepository(RowMapper<USER> rowMapper, RowUnmapper<USER> rowUnmapper, String idColumn)
	{
		super (USERDB.ROW_MAPPER, USERDB.ROW_UNMAPPER, USERDB.getTableName (), idColumn);
	}

	@Override
	protected USER postCreate(USER entity, Number generatedId)
	{
		entity.setPersisted(true);
		return entity;
	}



	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}

