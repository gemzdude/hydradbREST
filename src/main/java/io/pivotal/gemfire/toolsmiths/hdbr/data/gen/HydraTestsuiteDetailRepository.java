package io.pivotal.gemfire.toolsmiths.hdbr.data.gen;

//import com.nurkiewicz.jdbcrepository.JdbcRepositoryOriginal;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcOperations;
import org.springframework.stereotype.Repository;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import io.pivotal.gemfire.toolsmiths.hdbr.data.gen.db.HydraTestsuiteDetailDB;
import io.pivotal.gemfire.toolsmiths.hdbr.data.gen.HydraTestsuiteDetail;
import java.util.List;
import org.springframework.jdbc.core.RowMapper;
//import com.nurkiewicz.jdbcrepository.RowUnmapper;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
@Repository
public class HydraTestsuiteDetailRepository extends JdbcRepository<HydraTestsuiteDetail, Integer>
{

	final static Logger logger = LoggerFactory.getLogger (HydraTestsuiteDetailRepository.class);

	@Autowired
	private JdbcOperations jdbcOperations;

	protected JdbcOperations getJdbcOperations()
	{
		return this.jdbcOperations;
	}

	public HydraTestsuiteDetailRepository()
	{
		super (HydraTestsuiteDetailDB.ROW_MAPPER, HydraTestsuiteDetailDB.ROW_UNMAPPER, HydraTestsuiteDetailDB.getTableName ());
	}

	public HydraTestsuiteDetailRepository(RowMapper<HydraTestsuiteDetail> rowMapper, RowUnmapper<HydraTestsuiteDetail> rowUnmapper, String idColumn)
	{
		super (HydraTestsuiteDetailDB.ROW_MAPPER, HydraTestsuiteDetailDB.ROW_UNMAPPER, HydraTestsuiteDetailDB.getTableName (), idColumn);
	}

	@Override
	protected HydraTestsuiteDetail postCreate(HydraTestsuiteDetail entity, Number generatedId)
	{
		entity.setId(generatedId.intValue());
		entity.setPersisted(true);
		return entity;
	}


	public List<HydraTestsuiteDetail> getHydraTestsuiteDetailsByHostId (Long hostId)
	{
		String sql = "select * from " + HydraTestsuiteDetailDB.getTableName() + " where " + HydraTestsuiteDetailDB.COLUMNS.HOST_ID.getColumnName() + " = ? ";
		return this.jdbcOperations.query (sql, new Object[] { hostId }, HydraTestsuiteDetailDB.ROW_MAPPER);
	}

	public List<HydraTestsuiteDetail> getHydraTestsuiteDetailsByHydraRunId (Long hydraRunId)
	{
		String sql = "select * from " + HydraTestsuiteDetailDB.getTableName() + " where " + HydraTestsuiteDetailDB.COLUMNS.HYDRA_RUN_ID.getColumnName() + " = ? ";
		return this.jdbcOperations.query (sql, new Object[] { hydraRunId }, HydraTestsuiteDetailDB.ROW_MAPPER);
	}

	public List<HydraTestsuiteDetail> getHydraTestsuiteDetailsByHydraTestsuiteId (Long hydraTestsuiteId)
	{
		String sql = "select * from " + HydraTestsuiteDetailDB.getTableName() + " where " + HydraTestsuiteDetailDB.COLUMNS.HYDRA_TESTSUITE_ID.getColumnName() + " = ? ";
		return this.jdbcOperations.query (sql, new Object[] { hydraTestsuiteId }, HydraTestsuiteDetailDB.ROW_MAPPER);
	}


	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}

