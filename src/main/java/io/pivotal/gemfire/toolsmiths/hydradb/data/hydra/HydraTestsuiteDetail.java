package io.pivotal.gemfire.toolsmiths.hydradb.data.hydra;

import org.springframework.data.domain.Persistable;
import org.apache.commons.lang3.builder.ToStringBuilder;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * This class is generated by Spring Data Jdbc code generator.
 *
 * @author Spring Data Jdbc Code Generator
 */
@Entity
@Table( name = "HYDRA_TESTSUITE_DETAIL" )
public class HydraTestsuiteDetail implements Persistable<Integer>
{

	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	@Column
	private Date date = new Date ();

	@Column
	private String elapsedTime;

	@Column
	private String diskUsage;

	@Column
	private Integer passcount;

	@Column
	private Integer failcount;

	@Column
	private Integer hangcount;

	@Column
	private String localConf;

	@Column
	private Integer hydraTestsuiteId;

	@Column
	private Integer hydraRunId;

	@Column
	private Integer hostId;

	@Column
	private String comment;

	@Column
	private String artifactLocation = "";

	private transient boolean persisted;

	private transient Host host;
	private transient HydraRun hydraRun;
	private transient HydraTestsuite hydraTestsuite;

	public HydraTestsuiteDetail ()
	{

	}

	public Integer getId ()
	{
		return this.id;
	}

	public boolean isNew ()
	{
		return this.id == null;
	}

	public void setId(Integer id)
	{
		this.id = id;
	}

	public void setDate (Date date)
	{
		this.date = date;
	}

	public Date getDate ()
	{
		return this.date;
	}

	public void setElapsedTime (String elapsedTime)
	{
		this.elapsedTime = elapsedTime;
	}

	public String getElapsedTime ()
	{
		return this.elapsedTime;
	}

	public void setDiskUsage (String diskUsage)
	{
		this.diskUsage = diskUsage;
	}

	public String getDiskUsage ()
	{
		return this.diskUsage;
	}

	public void setPasscount (Integer passcount)
	{
		this.passcount = passcount;
	}

	public Integer getPasscount ()
	{
		return this.passcount;
	}

	public void setFailcount (Integer failcount)
	{
		this.failcount = failcount;
	}

	public Integer getFailcount ()
	{
		return this.failcount;
	}

	public void setHangcount (Integer hangcount)
	{
		this.hangcount = hangcount;
	}

	public Integer getHangcount ()
	{
		return this.hangcount;
	}

	public void setLocalConf (String localConf)
	{
		this.localConf = localConf;
	}

	public String getLocalConf ()
	{
		return this.localConf;
	}

	public void setHydraTestsuiteId (Integer hydraTestsuiteId)
	{
		this.hydraTestsuiteId = hydraTestsuiteId;
	}

	public Integer getHydraTestsuiteId ()
	{
		return this.hydraTestsuiteId;
	}

	public void setHydraRunId (Integer hydraRunId)
	{
		this.hydraRunId = hydraRunId;
	}

	public Integer getHydraRunId ()
	{
		return this.hydraRunId;
	}

	public void setHostId (Integer hostId)
	{
		this.hostId = hostId;
	}

	public Integer getHostId ()
	{
		return this.hostId;
	}

	public void setComment (String comment)
	{
		this.comment = comment;
	}

	public String getComment ()
	{
		return this.comment;
	}

	public void setArtifactLocation (String artifactLocation)
	{
		this.artifactLocation = artifactLocation;
	}

	public String getArtifactLocation ()
	{
		return this.artifactLocation;
	}

	public void setPersisted (Boolean persisted)
	{
		this.persisted = persisted;
	}

	public Boolean getPersisted ()
	{
		return this.persisted;
	}

	public void setHost (Host host)
	{
		this.host = host;
	}

	public Host getHost ()
	{
		return this.host;
	}

	public void setHydraRun (HydraRun hydraRun)
	{
		this.hydraRun = hydraRun;
	}

	public HydraRun getHydraRun ()
	{
		return this.hydraRun;
	}

	public void setHydraTestsuite (HydraTestsuite hydraTestsuite)
	{
		this.hydraTestsuite = hydraTestsuite;
	}

	public HydraTestsuite getHydraTestsuite ()
	{
		return this.hydraTestsuite;
	}

	@Override
	public String toString () 
	{
		return ToStringBuilder.reflectionToString (this); 
	}

	/* START Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

	/* END Do not remove/edit this line. CodeGenerator will preserve any code between start and end tags.*/

}